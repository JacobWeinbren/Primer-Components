---
// Import a unique ID generator
import { v4 as uuidv4 } from 'uuid';
const uniqueId = uuidv4(); // Generates a unique ID for each component instance
---

<div class="flex items-center overflow-hidden border mainMenu" data-unique-id={uniqueId}>
	<!-- Sub-container for items 1-5 that allows wrapping -->
	{
		["item 1", "item 2", "item 3", "item 4", "item 5"].map((item, index) => (
			<div id={`main-item-${index}-${uniqueId}`} class="m-1.5 flex-shrink-0 min-w-fit">
				{item}
			</div>
		))
	}
	<a href="/link-for-item-6" class="m-1.5 flex-shrink-0 min-w-fit" id={`link-item-6-${uniqueId}`}>Item 6</a>
</div>

<div class="flex flex-col overflowMenu">
	{
		["item 1", "item 2", "item 3", "item 4", "item 5"].map((item, index) => (
			<div id={`overflow-item-${index}-${uniqueId}`} class="m-1.5 hidden">
				{item}
			</div>
		))
	}
</div>

<script>
	import $ from "jquery";
	$(document).ready(function () {
		const mainMenu = $(".mainMenu");
		const overflowItems = $(".overflowMenu div");

		function checkVisibility() {
			const items = mainMenu.children("div");
			let totalItemsWidth = 0;
			items.each(function () {
				totalItemsWidth += $(this).outerWidth(true);
			});

			let cumulativeWidth = 0;
			items.each(function (index) {
				const mainItem = $(this);
				const overflowItem = overflowItems.eq(index);
				cumulativeWidth += mainItem.outerWidth(true);

				if (cumulativeWidth > mainMenu.width()) {
					mainItem.addClass("hidden");
					overflowItem.removeClass("hidden");
				} else {
					mainItem.removeClass("hidden");
					overflowItem.addClass("hidden");
				}
			});
		}

		const resizeObserver = new ResizeObserver(checkVisibility);
		resizeObserver.observe(mainMenu[0]);
	});
</script>